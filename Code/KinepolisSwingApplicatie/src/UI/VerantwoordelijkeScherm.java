/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import kinepolisswingapplicatie.Connectie;

/**
 *
 * @author Mohamed
 */
public class VerantwoordelijkeScherm extends javax.swing.JFrame {
    JFileChooser fileChooser;
    Connection conn;
    Statement st;
    ResultSet rs;
    PreparedStatement ps;
    String foto;
    int id;
    File f;
    FileInputStream fins;
    java.util.Date uitgifteJaar;
    java.sql.Date uitgifteJaarConvertToDB;
    DefaultTableModel dtm;
    
    /**
     * Creates new form VerantwoordelijkeScherm
     */
    public VerantwoordelijkeScherm() {
        initComponents();
        try {
            vulFilmTabel();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTitelFilmToevoegen = new javax.swing.JTextField();
        cbxGenreFilmToevoegen = new javax.swing.JComboBox();
        txtRegisseurFilmToevoegen = new javax.swing.JTextField();
        txtScoreFilmToevoegen = new javax.swing.JTextField();
        chk3DFilmToevoegen = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        dchUitgiftejaarFilmToevoegen = new com.toedter.calendar.JDateChooser();
        txtActeurFilmToevoegen = new javax.swing.JTextField();
        btnFotoFilmToevoegen = new javax.swing.JButton();
        lblFotoFilmTonen = new javax.swing.JLabel();
        btnFilmOpslaan = new javax.swing.JButton();
        btnFilmWijzigen = new javax.swing.JButton();
        btnFilmVerwijderen = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblFilmID = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        FilmTabel = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtAfspeelduurFilmToevoegen = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Films beheren", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Titel");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Genre");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Regisseur");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Uitgiftejaar");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Score");

        cbxGenreFilmToevoegen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Actie", "Actiekomedie", "Animatie", "Avontuur", "Biografische film", "Drama", "Fantasy", "Historisch", "Horror", "Jeugd", "Komedie", "Liefde/romantiek", "Musical", "Oorlog", "Romantische komedie", "Science fiction", "Thriller" }));

        chk3DFilmToevoegen.setText("3D");
        chk3DFilmToevoegen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Acteur");

        dchUitgiftejaarFilmToevoegen.setDateFormatString("dd-MM-yyyy");

        btnFotoFilmToevoegen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uploaden.png"))); // NOI18N
        btnFotoFilmToevoegen.setText("Foto");
        btnFotoFilmToevoegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoFilmToevoegenActionPerformed(evt);
            }
        });

        btnFilmOpslaan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/toevoegen.png"))); // NOI18N
        btnFilmOpslaan.setText("Toevoegen");
        btnFilmOpslaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilmOpslaanActionPerformed(evt);
            }
        });

        btnFilmWijzigen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wijziging opslaan.png"))); // NOI18N
        btnFilmWijzigen.setText("Wijzigen");
        btnFilmWijzigen.setEnabled(false);
        btnFilmWijzigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilmWijzigenActionPerformed(evt);
            }
        });

        btnFilmVerwijderen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnFilmVerwijderen.setText("Verwijderen");
        btnFilmVerwijderen.setEnabled(false);
        btnFilmVerwijderen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilmVerwijderenActionPerformed(evt);
            }
        });

        jLabel8.setText("/10");

        lblFilmID.setForeground(new java.awt.Color(240, 240, 240));
        lblFilmID.setToolTipText("");

        FilmTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FilmTabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(FilmTabel);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Afspeelduur");

        jLabel10.setText("min");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(257, 257, 257)
                        .addComponent(chk3DFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRegisseurFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTitelFilmToevoegen)
                            .addComponent(cbxGenreFilmToevoegen, 0, 325, Short.MAX_VALUE)
                            .addComponent(txtActeurFilmToevoegen)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtScoreFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnFilmVerwijderen)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnFilmWijzigen)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnFilmOpslaan))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(dchUitgiftejaarFilmToevoegen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAfspeelduurFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFotoFilmToevoegen)
                        .addGap(107, 107, 107))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblFilmID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFotoFilmTonen, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTitelFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFilmID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbxGenreFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtActeurFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtRegisseurFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dchUitgiftejaarFilmToevoegen, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtAfspeelduurFilmToevoegen))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtScoreFilmToevoegen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chk3DFilmToevoegen)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFilmVerwijderen)
                            .addComponent(btnFilmWijzigen)
                            .addComponent(btnFilmOpslaan))
                        .addGap(77, 77, 77))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblFotoFilmTonen, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFotoFilmToevoegen)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(844, 515));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFotoFilmToevoegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoFilmToevoegenActionPerformed
        // TODO add your handling code here:
        fileChooser = new JFileChooser();
        try {
            lblFotoFilmTonen.setIcon(null);
            fileChooser.showOpenDialog(null);
            File fc = new File(fileChooser.getSelectedFile().toString());
            Image foto = ImageIO.read(fc);

            Image foto1= foto.getScaledInstance(lblFotoFilmTonen.getHeight(), lblFotoFilmTonen.getWidth(), WIDTH);
            lblFotoFilmTonen.setIcon(new ImageIcon(foto1));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_btnFotoFilmToevoegenActionPerformed

    private void btnFilmOpslaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilmOpslaanActionPerformed
        // TODO add your handling code here:
        if (fileChooser==null) {
            foto="noimageavailable.png";
        } else {
            foto=fileChooser.getSelectedFile().toString();
        }
        IDOpvragen();
        try {
            f=new File(foto);
            fins = new FileInputStream(f);
            conn = kinepolisswingapplicatie.Connectie.connect();
            String sql = "insert into films values (?,?,?,?,?,?,?,?,?,?)";
            ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            ps.setString(2, txtTitelFilmToevoegen.getText());
            ps.setString(3, (String)cbxGenreFilmToevoegen.getSelectedItem());
            ps.setString(4, txtActeurFilmToevoegen.getText());
            ps.setString(5, txtRegisseurFilmToevoegen.getText());
            uitgifteJaar = dchUitgiftejaarFilmToevoegen.getDate();
            uitgifteJaarConvertToDB = new java.sql.Date(uitgifteJaar.getTime());
            ps.setDate(6, uitgifteJaarConvertToDB);
            ps.setInt(7, Integer.parseInt(txtAfspeelduurFilmToevoegen.getText()));
            ps.setDouble(8, Double.parseDouble(txtScoreFilmToevoegen.getText()));
            ps.setBinaryStream(9, fins);
            if (chk3DFilmToevoegen.isSelected() == true) {
                ps.setString(10, "true");
            }
            else{
                ps.setString(10, "false");
            }
            ps.execute();
            JOptionPane.showMessageDialog(null, "Film toegevoegd!");
            vulFilmTabel();
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_btnFilmOpslaanActionPerformed

    private void btnFilmWijzigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilmWijzigenActionPerformed
        // TODO add your handling code here:
        if(fileChooser==null){
            foto="noimageavailable.png";
            
        }
        else{
            foto=fileChooser.getSelectedFile().toString();
            
        }
        try {
            f=new File(foto);
            fins = new FileInputStream(f);
            conn = kinepolisswingapplicatie.Connectie.connect();
            String sql = "update films set Titel=?,Genre=?,Acteur=?,Regisseur=?,Uitgiftejaar=?,"
                    + "Afspeelduur=?, Score=?, Foto=?, 3D=? where FilmID=?";
                            
            ps = conn.prepareStatement(sql);
            ps.setInt(10, Integer.parseInt(lblFilmID.getText()));
            ps.setString(1, txtTitelFilmToevoegen.getText());
            ps.setString(2, (String)cbxGenreFilmToevoegen.getSelectedItem());
            ps.setString(3, txtActeurFilmToevoegen.getText());
            ps.setString(4, txtRegisseurFilmToevoegen.getText());
            uitgifteJaar = dchUitgiftejaarFilmToevoegen.getDate();
            uitgifteJaarConvertToDB = new java.sql.Date(uitgifteJaar.getTime());
            ps.setDate(5, uitgifteJaarConvertToDB);
            ps.setInt(6, Integer.parseInt(txtAfspeelduurFilmToevoegen.getText()));
            ps.setDouble(7, Double.parseDouble(txtScoreFilmToevoegen.getText()));
            ps.setBinaryStream(8, fins);
            if (chk3DFilmToevoegen.isSelected() == true) {
                ps.setString(9, "true");
            }
            else{
                ps.setString(9, "false");
            }
            ps.execute();
            JOptionPane.showMessageDialog(null, "Film met titel " + txtTitelFilmToevoegen.getText() +  " gewijzigd!");
            vulFilmTabel();
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_btnFilmWijzigenActionPerformed

    private void btnFilmVerwijderenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilmVerwijderenActionPerformed
        // TODO add your handling code here:
        conn = kinepolisswingapplicatie.Connectie.connect();
        String sql = "Delete from films where FilmID=?";
        try {
            ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(lblFilmID.getText()));
            ps.execute();
            JOptionPane.showMessageDialog(null, "Film verwijderd!");
            vulFilmTabel();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
        
    }//GEN-LAST:event_btnFilmVerwijderenActionPerformed

    private void FilmTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FilmTabelMouseClicked
        // TODO add your handling code here:
        btnFilmWijzigen.setEnabled(true);
        btnFilmVerwijderen.setEnabled(true);
        int rij = FilmTabel.getSelectedRow();
        
        lblFilmID.setText("" + FilmTabel.getModel().getValueAt(rij, 0));
        txtTitelFilmToevoegen.setText((String)FilmTabel.getModel().getValueAt(rij, 1));
        cbxGenreFilmToevoegen.setSelectedItem((String)FilmTabel.getModel().getValueAt(rij, 2));
        txtActeurFilmToevoegen.setText((String)FilmTabel.getModel().getValueAt(rij, 3));
        txtRegisseurFilmToevoegen.setText((String)FilmTabel.getModel().getValueAt(rij, 4));
        dchUitgiftejaarFilmToevoegen.setDate((Date)FilmTabel.getModel().getValueAt(rij, 5));
        txtAfspeelduurFilmToevoegen.setText("" + FilmTabel.getModel().getValueAt(rij, 6));
        txtScoreFilmToevoegen.setText("" + FilmTabel.getModel().getValueAt(rij, 7));
        FotoOpvragen(Integer.parseInt(lblFilmID.getText()));
        String is3D = ((String)FilmTabel.getModel().getValueAt(rij, 9));
        if (is3D.equals("true")){
            chk3DFilmToevoegen.setSelected(true);
        }
        else{
            chk3DFilmToevoegen.setSelected(false);
        }
    }//GEN-LAST:event_FilmTabelMouseClicked

    void IDOpvragen(){
        conn = Connectie.connect();
        String sql ="select ifnull(max(FilmID)+1,1)from films";
        
        try {
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next()){
               id=rs.getInt(1);
            }
        } catch (Exception e) {
        }
    }
    
    
    void FotoOpvragen(int id){
        conn = kinepolisswingapplicatie.Connectie.connect();
        String sql ="select Foto from films where FilmID='"+id+"'";
        
        try {
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next()){
               Image im = ImageIO.read(rs.getBinaryStream("Foto"));
               Image im1 = im.getScaledInstance(lblFotoFilmTonen.getHeight(), lblFotoFilmTonen.getWidth(), WIDTH);
               lblFotoFilmTonen.setIcon(new ImageIcon(im1));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }
    
    public void vulFilmTabel(){
    try {
        
        
         conn = Connectie.connect();
        

    Vector columnNames = new Vector(); 
    Vector data = new Vector();  
          
            String sql = "select * from films";
              Statement st=conn.createStatement();
                ResultSet rs=st.executeQuery(sql);  
             ResultSetMetaData metaData = rs.getMetaData();  
              int columns = metaData.getColumnCount(); 
               for (int i = 1; i <= columns; i++) {               
                 columnNames.addElement(metaData.getColumnName(i));    
               }
                while (rs.next()) {               
                    Vector row = new Vector(columns);   
                    for (int i = 1; i <= columns; i++) { 
                        row.addElement(rs.getObject(i));  
                }                
                data.addElement(row);
                 
                }
             dtm=new DefaultTableModel(data, columnNames);  
          FilmTabel.setModel(dtm);

            
      
    } 
    catch (Exception e) {
    
         
    }
 
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerantwoordelijkeScherm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerantwoordelijkeScherm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerantwoordelijkeScherm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerantwoordelijkeScherm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerantwoordelijkeScherm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FilmTabel;
    private javax.swing.JButton btnFilmOpslaan;
    private javax.swing.JButton btnFilmVerwijderen;
    private javax.swing.JButton btnFilmWijzigen;
    private javax.swing.JButton btnFotoFilmToevoegen;
    private javax.swing.JComboBox cbxGenreFilmToevoegen;
    private javax.swing.JCheckBox chk3DFilmToevoegen;
    private com.toedter.calendar.JDateChooser dchUitgiftejaarFilmToevoegen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFilmID;
    private javax.swing.JLabel lblFotoFilmTonen;
    private javax.swing.JTextField txtActeurFilmToevoegen;
    private javax.swing.JTextField txtAfspeelduurFilmToevoegen;
    private javax.swing.JTextField txtRegisseurFilmToevoegen;
    private javax.swing.JTextField txtScoreFilmToevoegen;
    private javax.swing.JTextField txtTitelFilmToevoegen;
    // End of variables declaration//GEN-END:variables
}
